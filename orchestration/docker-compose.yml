version: '3'
x-airflow-common:
  &airflow-common
  image: apache/airflow:2.7.3
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    _PIP_ADDITIONAL_REQUIREMENTS: faker kafka-python
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ../streaming/messages:/opt/streaming/messages
    - ../streaming:/opt/streaming
    - ../processing:/opt/processing
    - /var/run/docker.sock:/var/run/docker.sock
  depends_on:
    - postgres

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    networks:
      - x_restaurant

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      retries: 5
    networks:
      - x_restaurant

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    networks:
      - x_restaurant

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    ports:
      - 9000:9000
      - 9001:9001
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - minio_data:/data
    networks:
      - x_restaurant

volumes:
  postgres-db-volume:
  minio_data:

networks:
  x_restaurant:
    external: true
